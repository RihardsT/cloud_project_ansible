##### Containerd
- modprobe:
    name: overlay
    state: present
- modprobe:
    name: br_netfilter
    state: present
- sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes
- sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes
- sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    reload: yes
- name: containerd conf
  copy:
    src: files/containerd.conf
    dest: /etc/modules-load.d/containerd.conf
- name: containerd
  apt:
    pkg:
      - containerd
- name: Create a data directory
  file:
    path: /etc/containerd
    state: directory
- name: Check that /etc/containerd/config.toml exists
  stat:
    path: /etc/containerd/config.toml
  register: result
- name: containerd config default
  shell: |
    containerd config default | tee /etc/containerd/config.toml
  when: not result.stat.exists
- name: Create ContainerD directory for GCP
  file:
    path: "/data/containerd"
    state: directory
    mode: '0755'
- name: Containerd root storage
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^root ='
    line: 'root = "/data/containerd"'
  register: result
- name: Containerd CRI plugin was disabled by default, but enable it by commenting
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^disabled_plugins'
    line: '#disabled_plugins'
  register: result
- name: Add sockets to crictl
  copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
- name: Restart containerd after root storage change
  service:
    name: containerd
    state: restarted
  when: result is changed
